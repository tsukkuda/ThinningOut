学習データ・検証用データが大量すぎると処理が長引くので、乱数を使ってあらかじめ間引いてしまおうというプログラム。
間引いたあとのデータは、出力フォルダに後述の構造で「コピー」される。容量は食うが間引き前のデータをいじらないのであんしん！
また処理のログが出る。間引く際に使われた乱数も記録されているので再現性があるはず。


Main.py
subMain.py
logMaker.py

以上を同ディレクトリに置く．


*主にいじる変数[Main.py]
13行目：source_dir : 形成済みデータがある大元のフォルダパス。いわゆるExcelDataMakerのresultフォルダのパス。
19行目：base_dir : 出力先の大元のフォルダパス。実行後の出力フォルダはここに出力される。扱いやすい場所を指定しよう。
37行目：split_num : 1フォルダ(1sim)あたりから間引くファイル数。ファイル数がこれに満たない場合は、間引かない。
40行目：seed1 : 学習データを間引く際に使用する乱数。必要に応じて手動で設定してもよい。
41行目：seed2 : 検証データを間引く際に使用する乱数。以下同文。
46行目：learning_num : 学習データに使うフォルダ(sim)数。日数*seed数にする。
52行目：validation_num : 検証データに使うフォルダ(sim)数。日数*seed数にする。

これらの変数名に「sub」がついた変数があるが，これは異なる形成済みデータから抽出する用。これで渋滞するデータとしないデータを混ぜた抽出データを作れる。
18行目：mixFlag：これで混ぜるか混ぜないか指定する．Trueで混ぜる．


*プログラム実行後の出力フォルダの構造
2024-03-10-00h00m00s/
    └── usedData/
        ├── 検証用車両追跡データ/
        │   └── ADV比率3割/
        │       ├── xxxx.csv
        │       :   
        │       └── yyyy.csv
        │   
        │   
        ├── 車両追跡データ/
        │   ├── aaaa.csv
        │   :   
        │   └── bbbb.csv
        │   
        ├── 2024-03-10-00h00m00s_log.txt
        ├── 2024-03-10-00h00m00s_learning_log.txt
        └── 2024-03-10-00h00m00s_validation_log.txt

こんなかんじなので、検証用車両追跡データと車両追跡データはそのまま*の*にコピペして使えるぞ！